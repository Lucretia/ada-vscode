{
    "Function declaration": {
        "prefix": "function",
        "body": [
            "function ${1:${TM_FILENAME/(.*)\\..+$/$1/}} $2 return ${3:Return_Type};$0"
        ],
        "description": "function X ... return ... ;"
    },
    "Procedure declaration": {
        "prefix": "procedure",
        "body": [
            "procedure ${1:${TM_FILENAME/(.*)\\..+$/$1/}} $2;$0"
        ],
        "description": "procedure X ...;"
    },
    "Function definition": {
        "prefix": "function",
        "body": [
            "function ${1:${TM_FILENAME/(.*)\\..+$/$1/}} $2 return ${3:Return_Type} is",
            "begin",
            "   $0",
            "end $1;"
        ],
        "description": "function X ... return Y is ... end X;"
    },
    "Procedure definition": {
        "prefix": "procedure",
        "body": [
            "procedure ${1:${TM_FILENAME/(.*)\\..+$/$1/}} $2 is",
            "begin",
            "   $0",
            "end $1;"
        ],
        "description": "procedure X ... is ... end X;"
    },
    "Overriding indicator": {
        "prefix": "overriding",
        "body": [
            "${1|not overriding,overriding|}$0"
        ],
        "description": "[not] overriding"
    },
    "If": {
        "prefix": "if",
        "body": [
            "if $1 then",
            "   $0",
            "end if;"
        ],
        "description": "If ... then ... end if;"
    },
    "Else": {
        "prefix": "else",
        "body": [
            "else",
            "   $0"
        ]
    },
    "Elif": {
        "prefix": "elif",
        "body": [
            "elif $1 then",
            "   $0"
        ]
    },
    "Case": {
        "prefix": "case",
        "body": [
            "case $1 is",
            "   $0",
            "end case;"
        ]
    },
    "Case when": {
        "prefix": "when",
        "body": [
            "when $1 =>",
            "   $0"
        ]
    },
    "For loop": {
        "prefix": "for",
        "body": [
            "for ${1:Index} ${2|in,in reverse,of,of reverse|} ${3:Some_Range} loop",
            "   $0",
            "end loop;"
        ]
    },
    "While loop": {
        "prefix": "while",
        "body": [
            "while $1 loop",
            "   $0",
            "end loop;"
        ]
    }
}